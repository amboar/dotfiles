#!/usr/bin/sh

set -eux

APT_OPTS="-o Apt::Cmd::Disable-Script-Warning=true"

heihei_git_latest()
{
  git tag --list --contains HEAD |
    grep --invert-match ^"$(git describe --tags --always HEAD)"\$
}

# SSH authentication
until gpg --card-status >/dev/null 2>&1 ; do read -p "Insert nitrokey: " V; done

# langage-managed installations
pipx upgrade-all
rustup upgrade

# chroots
for R in $(schroot --list)
do
  schroot -c "$R" -u root -- sh -c "apt $APT_OPTS update"
  schroot -c "$R" -u root -- sh -c "apt $APT_OPTS upgrade -y"
  schroot -c "$R" -u root -- sh -c "apt $APT_OPTS autoremove -y"
done

# VMs
for M in $(virsh --readonly --connect qemu:///system list --name | head -n-1)
do
  # Work-around for flaky agent auth over socket forwarding with nitrokey (?)
  until ssh -A "$M".local sudo -S sh -c "'apt $APT_OPTS update'" </dev/null; do sleep 1; done
  until ssh -A "$M".local sudo -S sh -c "'apt $APT_OPTS upgrade -y'" </dev/null; do sleep 1; done
  until ssh -A "$M".local sudo -S sh -c "'apt $APT_OPTS autoremove -y'" </dev/null; do sleep 1; done
done

# source installations
(
  
  cd ~/src/github.com/helix-editor/helix
  git fetch --tags origin
  helix_tag="$(heihei_git_latest || true)"
  if [ -n "$helix_tag" ]
  then
    git checkout "$helix_tag"
    cargo install --path helix-term --locked
  fi
)

(
  cd ~/src/github.com/google/bloaty
  git fetch --tags origin
  bloaty_tag="$(heihei_git_latest || true)"
  if [ -n "$bloaty_tag" ]
  then
    git checkout "$bloaty_tag"
    cmake --build build
    cmake --build build --target install
  fi
)
