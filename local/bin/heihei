#!/usr/bin/sh

set -eux

: ${HEIHEI_UPDATES:="bloaty coccinelle fish flatpaks halloy helix packetry pipx rustup schroots vms wasm-pack"}

APT_OPTS="-o Apt::Cmd::Disable-Script-Warning=true"

heihei_git_latest()
{
  if [ $# -eq 1 ] && [ -n "$1" ]
  then
    echo $1
  else
    git tag --list --contains HEAD |
      grep --invert-match ^"$(git describe --tags --always HEAD)"\$ |
      tail -n1
  fi
}

# SSH authentication
if echo $HEIHEI_UPDATES | grep -q vms
then
  until gpg --card-status >/dev/null 2>&1 ; do read -p "Insert nitrokey: " V; done
fi

if echo $HEIHEI_UPDATES | grep -q pipx
then
  pipx upgrade-all
fi

if echo $HEIHEI_UPDATES | grep -q rustup
then
  rustup upgrade
fi

if echo $HEIHEI_UPDATES | grep -q flatpaks
then
  flatpak --assumeyes update
fi

if echo $HEIHEI_UPDATES | grep -q schroots
then
  for R in $(schroot --list)
  do
    schroot -c "$R" -u root -- sh -c "apt $APT_OPTS update"
    schroot -c "$R" -u root -- sh -c "apt $APT_OPTS upgrade -y"
    schroot -c "$R" -u root -- sh -c "apt $APT_OPTS autoremove -y"
  done
fi

if echo $HEIHEI_UPDATES | grep -q vms
then
  for M in $(virsh --readonly --connect qemu:///system list --name | head -n-1)
  do
    # Work-around for flaky agent auth over socket forwarding with nitrokey (?)
    until ssh -A "$M".local sudo -S sh -c "'apt $APT_OPTS update'" </dev/null; do sleep 1; done
    until ssh -A "$M".local sudo -S sh -c "'apt $APT_OPTS upgrade -y'" </dev/null; do sleep 1; done
    until ssh -A "$M".local sudo -S sh -c "'apt $APT_OPTS autoremove -y'" </dev/null; do sleep 1; done
  done
fi

if echo $HEIHEI_UPDATES | grep -q halloy
then
  (
    cd ~/src/github.com/squidowl/halloy
    git fetch --tags origin
    halloy_tag="$(heihei_git_latest ${HEIHEI_HALLOY_ID:-""} || true)"
    if [ -n "$halloy_tag" ]
    then
      git checkout "$halloy_tag"
      cargo install --path . --locked
    fi
  )
fi

if echo $HEIHEI_UPDATES | grep -q helix
then
  (
    cd ~/src/github.com/helix-editor/helix
    git fetch --tags origin
    helix_tag="$(heihei_git_latest ${HEIHEI_HELIX_ID:-""} || true)"
    if [ -n "$helix_tag" ]
    then
      git checkout "$helix_tag"
      cargo install --path helix-term --locked
    fi
  )
fi

if echo $HEIHEI_UPDATES | grep -q bloaty
then
  (
    cd ~/src/github.com/google/bloaty
    git fetch --tags origin
    bloaty_tag="$(heihei_git_latest ${HEIHEI_BLOATY_ID:-""} || true)"
    if [ -n "$bloaty_tag" ]
    then
      git checkout "$bloaty_tag"
      cmake --build build
      cmake --build build --target install
    fi
  )
fi

if echo $HEIHEI_UPDATES | grep -q fish
then
  (
    cd ~/src/github.com/fish-shell/fish-shell
    git fetch --tags origin
    fish_tag="$(heihei_git_latest ${HEIHEI_FISH_ID:-""} || true)"
    if [ -n "$fish_tag" ]
    then
      git checkout "$fish_tag"
      cmake -DCMAKE_INSTALL_PREFIX="${HOME}"/.local -B build
      cmake --build build
      cmake --install build
    fi
  )
fi

if echo $HEIHEI_UPDATES | grep -q packetry
then
  (
    cd ~/src/github.com/greatscottgadgets/packetry
    git fetch --tags origin
    packetry_tag="$(heihei_git_latest ${HEIHEI_PACKETRY_ID:-""} || true)"
    if [ -n "$packetry_tag" ]
    then
      git checkout "$packetry_tag"
      cargo install --path . --bin packetry
    fi
  )
fi

if echo $HEIHEI_UPDATES | grep -q coccinelle
then
  (
    cd ~/src/github.com/coccinelle/coccinelle
    git fetch --tags origin
    coccinelle_tag="$(heihei_git_latest ${HEIHEI_COCCINELLE_ID:-""} || true)"
    if [ -n "$coccinelle_tag" ]
    then
      git checkout "$coccinelle_tag"
      ./autogen
      ./configure --prefix=${HOME}/.local --enable-ocaml --enable-python --with-python=python3 --enable-opt
      make -j$(nproc)
      make install
    fi
  )
fi

if echo $HEIHEI_UPDATES | grep -q wasm-pack
then
  (
    cd ~/src/github.com/rustwasm/wasm-pack
    git fetch --tags origin
    wasm_pack_tag="$(heihei_git_latest ${HEIHEI_WASM_PACK_ID:-""} || true)"
    if [ -n "$wasm_pack_tag" ]
    then
      git checkout "$wasm_pack_tag"
      cargo install --path . --locked
    fi
  )
fi
